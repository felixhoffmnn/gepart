[tool.poetry]
name = "studienarbeit"
version = "0.2.1"
description = "The studienarbeit is a scientific paper which is written in the 5th and 6th semester at the DHBW."
authors = [
  "Felix Hoffmann <felix.emmanuel.hoffmann@gmail.com>",
  "Leopold Fuchs <kontakt@leopold-fuchs.de>",
]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
]
license = "MIT"
readme = "README.md"
packages = [{ include = "studienarbeit" }]

[tool.poetry.dependencies]
python = ">=3.10,<3.12"
loguru = "^0.6.0"
pandas = "^1.5.0"
numpy = "^1.23.3"
pyarrow = "^10.0.1"
openpyxl = "^3.0.10"
seaborn = "^0.12.2"
nltk = "^3.8.1"
spacy = [
  { extras = [
    "cuda12x",
    "lookups",
    "transformers",
  ], version = "^3.5.0", platform = "linux" },
  { extras = [
    "apple",
    "lookups",
    "transformers",
  ], version = "^3.5.0", platform = "darwin" },
]
pdfminer-six = "^20220524"
de-core-news-lg = { url = "https://github.com/explosion/spacy-models/releases/download/de_core_news_lg-3.5.0/de_core_news_lg-3.5.0.tar.gz" }
polars = "^0.16.2"
python-dotenv = "^0.21.1"
transformers = "^4.26.1"
scikit-learn = "^1.2.1"
dvc = { extras = ["gdrive"], version = "^2.45.1" }
torch = "^1.13.1"
num2words = "^0.5.12"
lazypredict = "^0.2.12"
pybind11 = "^2.10.3"
gensim = "^4.3.0"
plotly = "^5.13.1"
kaleido = "0.2.1"
wordcloud = "^1.8.2.2"
ydata-profiling = "^4.1.2"
keras = { version = "^2.12.0", platform = "linux" }
tensorflow-addons = "^0.20.0"
hvplot = "^0.8.3"
holoviews = "^1.16.0"
bpemb = "^0.3.4"
imblearn = "^0.0"
fire = "^0.5.0"
fasttext-wheel = "^0.9.2"
tensorflow = { version = "^2.12.0", platform = "linux" }
datasets = "^2.12.0"
keras-preprocessing = "^1.1.2"
protobuf = { version = "3.20.3", platform = "darwin" }

[tool.poetry.group.dev.dependencies]
black = { extras = ["jupyter"], version = "^22.8.0" }
mypy = "^0.981"
pre-commit = "^2.20.0"
jupyter = "^1.0.0"
ruff = "^0.0.270"

[tool.ruff]
line-length = 120
target-version = "py310"
unfixable = [
  "ERA", # do not autoremove commented out code
]
select = [
  "E",   # pycodestyle
  "F",   # flake8
  "B",   # flake8-bugbear
  "C",   # flake8-comprehensions
  "ERA", # flake8-eradicate/eradicate
  "I",   # isort
  # "N",   # pep8-naming
  "D",   # pydocstyle
  "Q",   # flake8-quotes
  "PIE", # flake8-pie
  "PGH", # pygrep
  "RUF", # ruff checks
  "SIM", # flake8-simplify
  "TCH", # flake8-type-checking
  "TID", # flake8-tidy-imports
  "UP",  # pyupgrade
]
ignore = [
  "E501", # line too long, handled by black
  "D401", # imperative mood

  # TODO: Fix these
  "D100", # missing docstring in public module
  "D101", # missing docstring in public class
  "D102", # missing docstring in public method
  "D103", # missing docstring in public function
  "D104", # missing docstring in public package
  "PGH003", # Specific rule codes
]

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.black]
line-length = 120
target-version = ["py310"]

[tool.mypy]
# strict = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
